name: Deploy - Test

on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    strategy:
      matrix:
        architecture: [lambda-mono, lambda-s3, edge-bundled, edge-unbundled]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - name: Setup Node.js
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@8c3f20df09ac63af7b3ae3d7c91f105f857d8497 # v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Build
        run: pnpm build
        env:
          ADAPTER_ARCHITECTURE: ${{ matrix.architecture }}
          ADAPTER_FQDN: ${{ format('{0}.adapter-aws.com', matrix.architecture) }}
          ADAPTER_CERTIFICATE_ARN: ${{ (matrix.architecture == 'lambda-mono' && secrets.LAMBDA_MONO_CERTIFICATE_ARN) || (matrix.architecture == 'lambda-s3' && secrets.LAMBDA_S3_CERTIFICATE_ARN) || (matrix.architecture == 'edge-bundled' && secrets.EDGE_BUNDLED_CERTIFICATE_ARN) || (matrix.architecture == 'edge-unbundled' && secrets.EDGE_UNBUNDLED_CERTIFICATE_ARN)}}

  test:
    needs: deploy
    strategy:
      matrix:
        architecture: [lambda-mono, lambda-s3, edge-bundled, edge-unbundled]
    uses: jill64/reusable-workflow/.github/workflows/test.yml@main
    with:
      test-command: ${{ format('pnpx playwright install && export ADAPTER_FQDN={0}.adapter-aws.com && pnpm test', matrix.architecture) }}
